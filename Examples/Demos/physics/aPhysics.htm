<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<title>Behaviours demos</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{mso-style-link:"\0422\0435\043A\0441\0442 \0417\043D\0430\043A";
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;}
p.msonormal0, li.msonormal0, div.msonormal0
	{mso-style-name:msonormal;
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;}
span.a
	{mso-style-name:"\0422\0435\043A\0441\0442 \0417\043D\0430\043A";
	mso-style-link:\0422\0435\043A\0441\0442;
	font-family:Consolas;}
p.msochpdefault, li.msochpdefault, div.msochpdefault
	{mso-style-name:msochpdefault;
	margin-right:0cm;
	margin-left:0cm;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
.MsoChpDefault
	{font-size:10.0pt;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body bgcolor=white lang=RU link=blue vlink=purple>

<div class=WordSection1>

<p class=MsoPlainText><b><span lang=FR style='font-size:13.5pt;font-family:
"Courier New"'>Physics&nbsp;: </span></b></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="ClothActor/ClothActorD.dpr"><b>Clothactor
     </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>Verlet cloth simulation and verlet
      constraints controlled by an actor's skeleton. </span></li>
  <li class=MsoNormal><span lang=FR>Verlet physics is used to simulate a
      cloth-like effect on a mesh. Trinity in a cape. </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=549 height=406 src=ClothActor/ClothActor.jpg></p>


<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="NewtonDensity/NewtonDensityD.dpr"><b>NewtonDensity
     </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>  This demo explains how to use customForceAndTorque, 
  and show the newton api buoyancy effect as example. Density unit is the number of mass unit per volume unit: D=M/V
  Body volume is calculated by Newton, and Mass is the product result of Density*Volume.
  If fluidDensity=bodyDensity, the body will be immerged like a submarine. </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=549 height=406 src=NewtonDensity/NewtonDensity.jpg></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="NewtonJoints/NewtonJointsD.dpr"><b>NewtonJoints
     </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>   This example show Joints.
  Mouse1 to pick, Mouse2 to move camera. When you create Joints with TGLNGD, 
  it's better if one of the two bodies is static.
  In debug view (If ShowJoint is true in manager), the blues lines represent
  pins direction, aquamarine dot represent pivot point, and aqua is connections
  between BaseSceneObjects. However if you create multiples connected joints
  (ex: FLOOR<--HINGE-->CUBE<--HINGE-->SPHERE), the debug view won't match 
  to bodies positions because Joints are represented in global space.
. </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=549 height=406 src=NewtonJoints/NewtonJoints.jpg></p>


<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="NewtonMaterial/NewtonMaterialD.dpr"><b>NewtonMaterial
     </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>    This demo demonstrates how to use material (or surface) effects with newton.
  Manager owns SurfaceItems and SurfacePair list where we can adjust elasticity,friction... between two SurfaceItems. 
  We set SurfaceItems for each NGDBehaviours, and in SurfacePair, we choose the two group-id wich perform these effects.
  Actually we can't set surfaceItem on behaviour (or on surfacePair) in design time. 
  This must be done in runtime. </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=549 height=406 src=NewtonMaterial/NewtonMaterial.jpg></p>


<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="NewtonPick/NewtonMousePickD.dpr"><b>NewtonPick
     </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>      This example show how to move a body by calling the pick function of joint.
  Change kinematicControllerOptions.PickModeLinear to feel the difference. 
  Most of the code must be written by developer in mouse events. </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=549 height=406 src=NewtonPick/NewtonMousePick.jpg></p>


<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="NewtonSimple/NewtonSimpleD.dpr"><b>NewtonSimple
     </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>        This is the simplest example of how to create dynamic body suported by NGD.
  To execute the simulation we need to indicate to the physics engine the time
  elapsed for update in GLCadencer1Progress. The floor is static, so it can't move. </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=549 height=406 src=NewtonSimple/NewtonSimple.jpg></p>


<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="OdeClothify/OdeClothifyD.dpr"><b>OdeClothify
     </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>using VerletAssembly to simulate cloths /
      jellies </span></li>
  <li class=MsoNormal><span lang=FR>using GLVerletClothify to create a
      freeform/actor into a jelly / cloth </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=500 height=362 src=OdeClothify/OdeClothify.jpg></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="OdeFurball/OdeFurballD.dpr"><b>Ode
     FurBall </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>Using Verlet Hair with ODE: Fur Balls </span></li>
  <li class=MsoNormal><span lang=FR>This determines friction, play around with
      it! </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=505 height=345 src=OdeFurball/OdeFurBall.jpg></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="OdeMachine/OdeMachineD.dpr"><b>Ode
     Machine </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>Using ODEManager to create complex dynamics
      objects </span></li>
  <li class=MsoNormal><span lang=FR>Using joints to connect several objects </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=507 height=356 src=OdeMachine/OdeMachine.jpg></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="OdeRagdoll/OdeRagdollD.dpr"><b><span
     style='color:#0066CC'>Ode Ragdoll</span> </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>Using ODEManager to create skinned ragdolls
      </span></li>
  <li class=MsoNormal><span lang=FR>Using joints to cast a ragdoll
      on&nbsp;different objects </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=505 height=364 src=OdeRagdoll/OdeRagdoll.jpg></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="OdeSimple/OdeSimpleD.dpr"><b>Ode
     Simple </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>Using ODEManager to create simple dynamics
      objects </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=515 height=379 src=OdeSimple/OdeSimple.jpg></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><span lang=FR><a href="OdeTerrain/OdeTerrainD.dpr"><b>Ode
     Terrain </b></a><b>&nbsp;: </b></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal><span lang=FR>Getting a GLODEManager and
      GLTerrainRenderer talking. </span></li>
  <li class=MsoNormal><span lang=FR>Use '1' -&gt; '5' keys to drop objects onto
      Terrain. </span></li>
 </ul>
</ul>

<p class=MsoNormal><img border=0 width=526 height=389 src=OdeTerrain/OdeTerrain.jpg></p>

<p class=MsoNormal><span lang=FR><a href="../../../demos.htm">Back </a></span></p>

</div>

</body>

</html>
